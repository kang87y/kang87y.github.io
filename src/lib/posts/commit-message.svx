---
title: "커밋 메시지 작성법"
description: "효율적이고 의미 있는 커밋 메시지 작성법을 익히고, 팀 협업과 코드 히스토리를 깔끔하게 관리하는 방법을 알아봅니다."
author: "kang87y"
date: "2024-12-22"
---

<script>
  import PostSection from '$lib/components/PostSection.svelte';
</script>

```bash
git commit -m "Initial commit"
```

커밋 메시지는 **Git**에서 변경 사항을 설명하는 중요한 부분입니다.<br>
잘 작성된 커밋 메시지는 코드의 변화가 어떤 이유로 이루어졌는지 명확하게 전달할 수 있습니다.<br>
또한, 다른 팀원들이 코드 히스토리를 이해하고 협업을 원활하게 진행하는 데 큰 도움이 됩니다.

<PostSection title="커밋 메시지 작성 규칙">
  커밋 메시지는 간결하고 명확하게, 그리고 일관성 있게 작성하는 것이 중요합니다.<br>다음과 같은 규칙을 지키면 커밋 메시지를 더 효율적으로 작성할 수 있습니다.
</PostSection>

<br>
<br>

## 제목(Subject) 작성

커밋 메시지의 제목은 **간결하고 명확하게** 변경 사항을 설명해야 합니다.<br>
일반적으로 제목은 **50자 이내**로 작성하는 것이 좋습니다. 제목을 쓸 때는 **동사로 시작**하고, **현재 시제**로 작성합니다.

제목 앞에는 아래와 같은 커밋 타입을 명시해 커밋 내용을 더 쉽게 알아볼 수 있게 합니다.
<br>

| **Type**    | **Description**                                                                            |
|-------------|--------------------------------------------------------------------------------------------|
| **feat**    | 새로운 기능을 추가합니다.                                                                  |
| **fix**     | 버그를 수정합니다.                                                                         |
| **docs**    | 문서를 추가하거나 수정합니다.                                                              |
| **style**   | 코드 스타일이나 포매팅을 수정합니다. (동작에는 영향 없음)                                   |
| **design**  | UI/UX 디자인 요소를 변경하거나 스타일(CSS) 작업을 합니다.                                  |
| **test**    | 테스트 코드 추가, 수정 또는 리팩토링을 수행합니다.                                         |
| **refactor**| 코드 리팩토링 작업을 수행합니다. (기능 변경 없음)                                           |
| **build**   | 빌드 시스템 또는 외부 종속성을 수정합니다.                                                 |
| **ci**      | CI/CD 설정 파일을 수정합니다.                                                              |
| **perf**    | 성능을 개선합니다.                                                                         |
| **chore**   | 코드 변경 없이 기타 작업(빌드 업데이트, 패키지 관리 등)을 수행합니다.                      |
| **rename**  | 파일이나 폴더 이름을 변경합니다.                                                           |
| **remove**  | 파일이나 폴더를 삭제합니다.                                                                |
| **hotfix**  | 긴급한 버그 수정을 수행합니다.                                                             |


<br>
<br>
<br>

## 본문(Body) 작성

본문은 커밋의 변경 사항에 대해 좀 더 구체적으로 설명하는 부분입니다.<br>
**50~72자 이내로** 작성하며, 본문에서는 왜 이 변경이 이루어졌는지에 대해 설명합니다.<br>
이를 통해 코드 변경의 목적과 이유를 명확히 알릴 수 있습니다.

<br>
<br>

<PostSection title="커밋 메시지 작성 팁">
  - 커밋은 한 가지 작업에 대해 단위로 묶어야 합니다. 여러 가지 변경 사항을 한 커밋에 담으면 추적하기 어려워집니다.<br>
  - 변경 사항이 왜 필요한지, 어떤 문제를 해결하는지에 대해 구체적으로 작성합니다.<br>
  - 너무 작은 변경 사항이나 큰 변경 사항은 피하고, 의미 있는 단위로 커밋을 나눕니다.
</PostSection>

잘 작성된 커밋 메시지는 코드의 히스토리를 명확히 하고, 팀원들과의 협업을 원활하게 만들어 줍니다.<br>
규칙적인 커밋 메시지 작성 규칙을 통해 프로젝트의 품질을 높이고, 향후 코드 유지보수 시에도 큰 도움이 될 것입니다.


